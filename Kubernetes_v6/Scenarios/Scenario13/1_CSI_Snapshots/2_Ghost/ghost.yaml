apiVersion: v1
kind: Namespace
metadata:
  name: ghost
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mydata
  namespace: ghost
  labels:
    app.kubernetes.io/name: scenario13
    app: blog
spec:
  accessModes:
  - ReadWriteMany
  resources:
    requests:
      storage: 5Gi
  storageClassName: storage-class-nfs

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: blog
  namespace: ghost
  labels:
    app.kubernetes.io/name: scenario13
    app: blog
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: scenario13
      app: blog
  template:
    metadata:
      labels:
        app.kubernetes.io/name: scenario13
        app: blog
    spec:
      nodeSelector:
        kubernetes.io/os: linux
      containers:
      - name: blog
        image: registry.demo.netapp.com/ghost:2.6-alpine
        ports:
        - containerPort: 2368
        env:
        - name: url
          value: http://192.168.0.63:30080
        volumeMounts:
        - mountPath: /var/lib/ghost/content
          name: content
      volumes:
      - name: content
        persistentVolumeClaim:
          claimName: mydata
---
apiVersion: v1
kind: Service
metadata:
  name: blog
  namespace: ghost
  labels:
    app.kubernetes.io/name: scenario13
    app: blog
spec:
  type: NodePort
  selector:
    app.kubernetes.io/name: scenario13
    app: blog
  ports:
  - protocol: TCP
    port: 80
    targetPort: 2368
    nodePort: 30080
